/*
 * Kadaster - BRK-Bevragen API
 * D.m.v. deze toepassing worden meerdere, korte bevragingen op de Basis Registratie Kadaster beschikbaar gesteld. Deze toepassing betreft het verstrekken van Kadastrale Onroerende Zaak informatie. 
 *
 * The version of the OpenAPI document: 1.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.Waardelijst;

/**
 * De reden om een stuk niet in te schrijven of om verbetering te vragen. Waardelijst in deze component : [reden](http://www.kadaster.nl/schemas/waardelijsten/RedenVerzoek/) 
 */
@ApiModel(description = "De reden om een stuk niet in te schrijven of om verbetering te vragen. Waardelijst in deze component : [reden](http://www.kadaster.nl/schemas/waardelijsten/RedenVerzoek/) ")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-22T08:28:41.072015Z[Etc/UTC]")
public class RedenVerzoek {
  public static final String SERIALIZED_NAME_REDEN_OMSCHRIJVING = "redenOmschrijving";
  @SerializedName(SERIALIZED_NAME_REDEN_OMSCHRIJVING)
  private String redenOmschrijving;

  public static final String SERIALIZED_NAME_REDEN = "reden";
  @SerializedName(SERIALIZED_NAME_REDEN)
  private Waardelijst reden;


  public RedenVerzoek redenOmschrijving(String redenOmschrijving) {
    
    this.redenOmschrijving = redenOmschrijving;
    return this;
  }

   /**
   * De omschrijving van de reden voor een kadasterverzoek die afwijkt van de standaard redenen die kunnen worden opgegeven. Bij opgave van de reden is voor _overig_ gekozen. 
   * @return redenOmschrijving
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "De omschrijving van de reden voor een kadasterverzoek die afwijkt van de standaard redenen die kunnen worden opgegeven. Bij opgave van de reden is voor _overig_ gekozen. ")

  public String getRedenOmschrijving() {
    return redenOmschrijving;
  }


  public void setRedenOmschrijving(String redenOmschrijving) {
    this.redenOmschrijving = redenOmschrijving;
  }


  public RedenVerzoek reden(Waardelijst reden) {
    
    this.reden = reden;
    return this;
  }

   /**
   * Get reden
   * @return reden
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Waardelijst getReden() {
    return reden;
  }


  public void setReden(Waardelijst reden) {
    this.reden = reden;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RedenVerzoek redenVerzoek = (RedenVerzoek) o;
    return Objects.equals(this.redenOmschrijving, redenVerzoek.redenOmschrijving) &&
        Objects.equals(this.reden, redenVerzoek.reden);
  }

  @Override
  public int hashCode() {
    return Objects.hash(redenOmschrijving, reden);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RedenVerzoek {\n");
    sb.append("    redenOmschrijving: ").append(toIndentedString(redenOmschrijving)).append("\n");
    sb.append("    reden: ").append(toIndentedString(reden)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

