/*
 * Kadaster - BRK-Bevragen API
 *
 * D.m.v. deze toepassing worden meerdere, korte bevragingen op de Basis Registratie Kadaster beschikbaar gesteld. Deze toepassing betreft het verstrekken van Kadastrale Onroerende Zaak informatie. 
 *
 * The version of the OpenAPI document: 1.3.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// AantekeningTenaamstellingAllOf
    /// </summary>
    [DataContract]
    public partial class AantekeningTenaamstellingAllOf :  IEquatable<AantekeningTenaamstellingAllOf>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AantekeningTenaamstellingAllOf" /> class.
        /// </summary>
        /// <param name="begrenzing">begrenzing.</param>
        /// <param name="indicatieOorspronkelijkObject">indicatieOorspronkelijkObject.</param>
        public AantekeningTenaamstellingAllOf(PolygonGeoJSON begrenzing = default(PolygonGeoJSON), bool indicatieOorspronkelijkObject = default(bool))
        {
            this.Begrenzing = begrenzing;
            this.IndicatieOorspronkelijkObject = indicatieOorspronkelijkObject;
        }

        /// <summary>
        /// Gets or Sets Begrenzing
        /// </summary>
        [DataMember(Name="begrenzing", EmitDefaultValue=false)]
        public PolygonGeoJSON Begrenzing { get; set; }

        /// <summary>
        /// Gets or Sets IndicatieOorspronkelijkObject
        /// </summary>
        [DataMember(Name="indicatieOorspronkelijkObject", EmitDefaultValue=false)]
        public bool IndicatieOorspronkelijkObject { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AantekeningTenaamstellingAllOf {\n");
            sb.Append("  Begrenzing: ").Append(Begrenzing).Append("\n");
            sb.Append("  IndicatieOorspronkelijkObject: ").Append(IndicatieOorspronkelijkObject).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AantekeningTenaamstellingAllOf);
        }

        /// <summary>
        /// Returns true if AantekeningTenaamstellingAllOf instances are equal
        /// </summary>
        /// <param name="input">Instance of AantekeningTenaamstellingAllOf to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AantekeningTenaamstellingAllOf input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Begrenzing == input.Begrenzing ||
                    (this.Begrenzing != null &&
                    this.Begrenzing.Equals(input.Begrenzing))
                ) && 
                (
                    this.IndicatieOorspronkelijkObject == input.IndicatieOorspronkelijkObject ||
                    (this.IndicatieOorspronkelijkObject != null &&
                    this.IndicatieOorspronkelijkObject.Equals(input.IndicatieOorspronkelijkObject))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Begrenzing != null)
                    hashCode = hashCode * 59 + this.Begrenzing.GetHashCode();
                if (this.IndicatieOorspronkelijkObject != null)
                    hashCode = hashCode * 59 + this.IndicatieOorspronkelijkObject.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
