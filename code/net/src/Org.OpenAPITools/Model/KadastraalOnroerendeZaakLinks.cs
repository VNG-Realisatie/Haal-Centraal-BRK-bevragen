/*
 * Kadaster - BRK-Bevragen API
 *
 * D.m.v. deze toepassing worden meerdere, korte bevragingen op de Basis Registratie Kadaster beschikbaar gesteld. Deze toepassing betreft het verstrekken van Kadastrale Onroerende Zaak informatie. 
 *
 * The version of the OpenAPI document: 1.4.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// KadastraalOnroerendeZaakLinks
    /// </summary>
    [DataContract]
    public partial class KadastraalOnroerendeZaakLinks :  IEquatable<KadastraalOnroerendeZaakLinks>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="KadastraalOnroerendeZaakLinks" /> class.
        /// </summary>
        /// <param name="self">self.</param>
        /// <param name="zakelijkGerechtigden">zakelijkGerechtigden.</param>
        /// <param name="privaatrechtelijkeBeperkingen">privaatrechtelijkeBeperkingen.</param>
        /// <param name="hypotheken">hypotheken.</param>
        /// <param name="isOntstaanUit">isOntstaanUit.</param>
        /// <param name="isOvergegaanIn">isOvergegaanIn.</param>
        /// <param name="beslagen">beslagen.</param>
        /// <param name="stukken">stukken.</param>
        /// <param name="stukdelen">stukdelen.</param>
        /// <param name="adressen">adressen.</param>
        /// <param name="adresseerbareObjecten">adresseerbareObjecten.</param>
        /// <param name="bijbehorendeGrondpercelen">bijbehorendeGrondpercelen.</param>
        /// <param name="bijbehorendeAppartementsrechten">bijbehorendeAppartementsrechten.</param>
        public KadastraalOnroerendeZaakLinks(HalLink self = default(HalLink), List<HalLink> zakelijkGerechtigden = default(List<HalLink>), List<HalLink> privaatrechtelijkeBeperkingen = default(List<HalLink>), List<HalLink> hypotheken = default(List<HalLink>), List<HalLink> isOntstaanUit = default(List<HalLink>), List<HalLink> isOvergegaanIn = default(List<HalLink>), List<HalLink> beslagen = default(List<HalLink>), List<HalLink> stukken = default(List<HalLink>), List<HalLink> stukdelen = default(List<HalLink>), List<HalLink> adressen = default(List<HalLink>), List<HalLink> adresseerbareObjecten = default(List<HalLink>), List<HalLink> bijbehorendeGrondpercelen = default(List<HalLink>), List<HalLink> bijbehorendeAppartementsrechten = default(List<HalLink>))
        {
            this.Self = self;
            this.ZakelijkGerechtigden = zakelijkGerechtigden;
            this.PrivaatrechtelijkeBeperkingen = privaatrechtelijkeBeperkingen;
            this.Hypotheken = hypotheken;
            this.IsOntstaanUit = isOntstaanUit;
            this.IsOvergegaanIn = isOvergegaanIn;
            this.Beslagen = beslagen;
            this.Stukken = stukken;
            this.Stukdelen = stukdelen;
            this.Adressen = adressen;
            this.AdresseerbareObjecten = adresseerbareObjecten;
            this.BijbehorendeGrondpercelen = bijbehorendeGrondpercelen;
            this.BijbehorendeAppartementsrechten = bijbehorendeAppartementsrechten;
        }

        /// <summary>
        /// Gets or Sets Self
        /// </summary>
        [DataMember(Name="self", EmitDefaultValue=false)]
        public HalLink Self { get; set; }

        /// <summary>
        /// Gets or Sets ZakelijkGerechtigden
        /// </summary>
        [DataMember(Name="zakelijkGerechtigden", EmitDefaultValue=false)]
        public List<HalLink> ZakelijkGerechtigden { get; set; }

        /// <summary>
        /// Gets or Sets PrivaatrechtelijkeBeperkingen
        /// </summary>
        [DataMember(Name="privaatrechtelijkeBeperkingen", EmitDefaultValue=false)]
        public List<HalLink> PrivaatrechtelijkeBeperkingen { get; set; }

        /// <summary>
        /// Gets or Sets Hypotheken
        /// </summary>
        [DataMember(Name="hypotheken", EmitDefaultValue=false)]
        public List<HalLink> Hypotheken { get; set; }

        /// <summary>
        /// Gets or Sets IsOntstaanUit
        /// </summary>
        [DataMember(Name="isOntstaanUit", EmitDefaultValue=false)]
        public List<HalLink> IsOntstaanUit { get; set; }

        /// <summary>
        /// Gets or Sets IsOvergegaanIn
        /// </summary>
        [DataMember(Name="isOvergegaanIn", EmitDefaultValue=false)]
        public List<HalLink> IsOvergegaanIn { get; set; }

        /// <summary>
        /// Gets or Sets Beslagen
        /// </summary>
        [DataMember(Name="beslagen", EmitDefaultValue=false)]
        public List<HalLink> Beslagen { get; set; }

        /// <summary>
        /// Gets or Sets Stukken
        /// </summary>
        [DataMember(Name="stukken", EmitDefaultValue=false)]
        public List<HalLink> Stukken { get; set; }

        /// <summary>
        /// Gets or Sets Stukdelen
        /// </summary>
        [DataMember(Name="stukdelen", EmitDefaultValue=false)]
        public List<HalLink> Stukdelen { get; set; }

        /// <summary>
        /// Gets or Sets Adressen
        /// </summary>
        [DataMember(Name="adressen", EmitDefaultValue=false)]
        public List<HalLink> Adressen { get; set; }

        /// <summary>
        /// Gets or Sets AdresseerbareObjecten
        /// </summary>
        [DataMember(Name="adresseerbareObjecten", EmitDefaultValue=false)]
        public List<HalLink> AdresseerbareObjecten { get; set; }

        /// <summary>
        /// Gets or Sets BijbehorendeGrondpercelen
        /// </summary>
        [DataMember(Name="bijbehorendeGrondpercelen", EmitDefaultValue=false)]
        public List<HalLink> BijbehorendeGrondpercelen { get; set; }

        /// <summary>
        /// Gets or Sets BijbehorendeAppartementsrechten
        /// </summary>
        [DataMember(Name="bijbehorendeAppartementsrechten", EmitDefaultValue=false)]
        public List<HalLink> BijbehorendeAppartementsrechten { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class KadastraalOnroerendeZaakLinks {\n");
            sb.Append("  Self: ").Append(Self).Append("\n");
            sb.Append("  ZakelijkGerechtigden: ").Append(ZakelijkGerechtigden).Append("\n");
            sb.Append("  PrivaatrechtelijkeBeperkingen: ").Append(PrivaatrechtelijkeBeperkingen).Append("\n");
            sb.Append("  Hypotheken: ").Append(Hypotheken).Append("\n");
            sb.Append("  IsOntstaanUit: ").Append(IsOntstaanUit).Append("\n");
            sb.Append("  IsOvergegaanIn: ").Append(IsOvergegaanIn).Append("\n");
            sb.Append("  Beslagen: ").Append(Beslagen).Append("\n");
            sb.Append("  Stukken: ").Append(Stukken).Append("\n");
            sb.Append("  Stukdelen: ").Append(Stukdelen).Append("\n");
            sb.Append("  Adressen: ").Append(Adressen).Append("\n");
            sb.Append("  AdresseerbareObjecten: ").Append(AdresseerbareObjecten).Append("\n");
            sb.Append("  BijbehorendeGrondpercelen: ").Append(BijbehorendeGrondpercelen).Append("\n");
            sb.Append("  BijbehorendeAppartementsrechten: ").Append(BijbehorendeAppartementsrechten).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as KadastraalOnroerendeZaakLinks);
        }

        /// <summary>
        /// Returns true if KadastraalOnroerendeZaakLinks instances are equal
        /// </summary>
        /// <param name="input">Instance of KadastraalOnroerendeZaakLinks to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(KadastraalOnroerendeZaakLinks input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Self == input.Self ||
                    (this.Self != null &&
                    this.Self.Equals(input.Self))
                ) && 
                (
                    this.ZakelijkGerechtigden == input.ZakelijkGerechtigden ||
                    this.ZakelijkGerechtigden != null &&
                    input.ZakelijkGerechtigden != null &&
                    this.ZakelijkGerechtigden.SequenceEqual(input.ZakelijkGerechtigden)
                ) && 
                (
                    this.PrivaatrechtelijkeBeperkingen == input.PrivaatrechtelijkeBeperkingen ||
                    this.PrivaatrechtelijkeBeperkingen != null &&
                    input.PrivaatrechtelijkeBeperkingen != null &&
                    this.PrivaatrechtelijkeBeperkingen.SequenceEqual(input.PrivaatrechtelijkeBeperkingen)
                ) && 
                (
                    this.Hypotheken == input.Hypotheken ||
                    this.Hypotheken != null &&
                    input.Hypotheken != null &&
                    this.Hypotheken.SequenceEqual(input.Hypotheken)
                ) && 
                (
                    this.IsOntstaanUit == input.IsOntstaanUit ||
                    this.IsOntstaanUit != null &&
                    input.IsOntstaanUit != null &&
                    this.IsOntstaanUit.SequenceEqual(input.IsOntstaanUit)
                ) && 
                (
                    this.IsOvergegaanIn == input.IsOvergegaanIn ||
                    this.IsOvergegaanIn != null &&
                    input.IsOvergegaanIn != null &&
                    this.IsOvergegaanIn.SequenceEqual(input.IsOvergegaanIn)
                ) && 
                (
                    this.Beslagen == input.Beslagen ||
                    this.Beslagen != null &&
                    input.Beslagen != null &&
                    this.Beslagen.SequenceEqual(input.Beslagen)
                ) && 
                (
                    this.Stukken == input.Stukken ||
                    this.Stukken != null &&
                    input.Stukken != null &&
                    this.Stukken.SequenceEqual(input.Stukken)
                ) && 
                (
                    this.Stukdelen == input.Stukdelen ||
                    this.Stukdelen != null &&
                    input.Stukdelen != null &&
                    this.Stukdelen.SequenceEqual(input.Stukdelen)
                ) && 
                (
                    this.Adressen == input.Adressen ||
                    this.Adressen != null &&
                    input.Adressen != null &&
                    this.Adressen.SequenceEqual(input.Adressen)
                ) && 
                (
                    this.AdresseerbareObjecten == input.AdresseerbareObjecten ||
                    this.AdresseerbareObjecten != null &&
                    input.AdresseerbareObjecten != null &&
                    this.AdresseerbareObjecten.SequenceEqual(input.AdresseerbareObjecten)
                ) && 
                (
                    this.BijbehorendeGrondpercelen == input.BijbehorendeGrondpercelen ||
                    this.BijbehorendeGrondpercelen != null &&
                    input.BijbehorendeGrondpercelen != null &&
                    this.BijbehorendeGrondpercelen.SequenceEqual(input.BijbehorendeGrondpercelen)
                ) && 
                (
                    this.BijbehorendeAppartementsrechten == input.BijbehorendeAppartementsrechten ||
                    this.BijbehorendeAppartementsrechten != null &&
                    input.BijbehorendeAppartementsrechten != null &&
                    this.BijbehorendeAppartementsrechten.SequenceEqual(input.BijbehorendeAppartementsrechten)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Self != null)
                    hashCode = hashCode * 59 + this.Self.GetHashCode();
                if (this.ZakelijkGerechtigden != null)
                    hashCode = hashCode * 59 + this.ZakelijkGerechtigden.GetHashCode();
                if (this.PrivaatrechtelijkeBeperkingen != null)
                    hashCode = hashCode * 59 + this.PrivaatrechtelijkeBeperkingen.GetHashCode();
                if (this.Hypotheken != null)
                    hashCode = hashCode * 59 + this.Hypotheken.GetHashCode();
                if (this.IsOntstaanUit != null)
                    hashCode = hashCode * 59 + this.IsOntstaanUit.GetHashCode();
                if (this.IsOvergegaanIn != null)
                    hashCode = hashCode * 59 + this.IsOvergegaanIn.GetHashCode();
                if (this.Beslagen != null)
                    hashCode = hashCode * 59 + this.Beslagen.GetHashCode();
                if (this.Stukken != null)
                    hashCode = hashCode * 59 + this.Stukken.GetHashCode();
                if (this.Stukdelen != null)
                    hashCode = hashCode * 59 + this.Stukdelen.GetHashCode();
                if (this.Adressen != null)
                    hashCode = hashCode * 59 + this.Adressen.GetHashCode();
                if (this.AdresseerbareObjecten != null)
                    hashCode = hashCode * 59 + this.AdresseerbareObjecten.GetHashCode();
                if (this.BijbehorendeGrondpercelen != null)
                    hashCode = hashCode * 59 + this.BijbehorendeGrondpercelen.GetHashCode();
                if (this.BijbehorendeAppartementsrechten != null)
                    hashCode = hashCode * 59 + this.BijbehorendeAppartementsrechten.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
