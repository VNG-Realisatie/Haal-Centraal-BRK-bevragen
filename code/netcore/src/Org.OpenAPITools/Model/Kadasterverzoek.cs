/*
 * Kadaster - BRK-Bevragen API
 *
 * D.m.v. deze toepassing worden meerdere, korte bevragingen op de Basis Registratie Kadaster beschikbaar gesteld. Deze toepassing betreft het verstrekken van Kadastrale Onroerende Zaak informatie. 
 *
 * The version of the OpenAPI document: 1.3.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Een verzoek om verbetering van een aangeboden stuk, of om de aanbieder te wijzen op het niet inschrijven van het stuk. Waardelijst in deze component :   [aard](http://www.kadaster.nl/schemas/waardelijsten/AardKadasterverzoek/) 
    /// </summary>
    [DataContract(Name = "Kadasterverzoek")]
    public partial class Kadasterverzoek : IEquatable<Kadasterverzoek>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Kadasterverzoek" /> class.
        /// </summary>
        /// <param name="aard">aard.</param>
        /// <param name="redenenVerzoek">redenenVerzoek.</param>
        public Kadasterverzoek(Waardelijst aard = default(Waardelijst), List<RedenVerzoek> redenenVerzoek = default(List<RedenVerzoek>))
        {
            this.Aard = aard;
            this.RedenenVerzoek = redenenVerzoek;
        }

        /// <summary>
        /// Gets or Sets Aard
        /// </summary>
        [DataMember(Name = "aard", EmitDefaultValue = false)]
        public Waardelijst Aard { get; set; }

        /// <summary>
        /// Gets or Sets RedenenVerzoek
        /// </summary>
        [DataMember(Name = "redenenVerzoek", EmitDefaultValue = false)]
        public List<RedenVerzoek> RedenenVerzoek { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Kadasterverzoek {\n");
            sb.Append("  Aard: ").Append(Aard).Append("\n");
            sb.Append("  RedenenVerzoek: ").Append(RedenenVerzoek).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Kadasterverzoek);
        }

        /// <summary>
        /// Returns true if Kadasterverzoek instances are equal
        /// </summary>
        /// <param name="input">Instance of Kadasterverzoek to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Kadasterverzoek input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Aard == input.Aard ||
                    (this.Aard != null &&
                    this.Aard.Equals(input.Aard))
                ) && 
                (
                    this.RedenenVerzoek == input.RedenenVerzoek ||
                    this.RedenenVerzoek != null &&
                    input.RedenenVerzoek != null &&
                    this.RedenenVerzoek.SequenceEqual(input.RedenenVerzoek)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Aard != null)
                    hashCode = hashCode * 59 + this.Aard.GetHashCode();
                if (this.RedenenVerzoek != null)
                    hashCode = hashCode * 59 + this.RedenenVerzoek.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
