/*
 * Kadaster - BRK-Bevragen API
 *
 * D.m.v. deze toepassing worden meerdere, korte bevragingen op de Basis Registratie Kadaster beschikbaar gesteld. Deze toepassing betreft het verstrekken van Kadastrale Onroerende Zaak informatie. 
 *
 * The version of the OpenAPI document: 1.3.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Een stukdeel is een paragraaf in een akte waarmee een recht gevestigd wordt. 
    /// </summary>
    [DataContract(Name = "Stukdeel")]
    public partial class Stukdeel : IEquatable<Stukdeel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Stukdeel" /> class.
        /// </summary>
        /// <param name="identificatie">identificatie.</param>
        /// <param name="domein">Het domein waartoe de identificatie behoort. .</param>
        /// <param name="aard">aard.</param>
        /// <param name="bedragTransactiesomLevering">bedragTransactiesomLevering.</param>
        /// <param name="omschrijvingKadastraleObjecten">omschrijvingKadastraleObjecten.</param>
        /// <param name="omschrijvingTopografischeMutatie">omschrijvingTopografischeMutatie.</param>
        public Stukdeel(string identificatie = default(string), string domein = default(string), Waardelijst aard = default(Waardelijst), Bedrag bedragTransactiesomLevering = default(Bedrag), string omschrijvingKadastraleObjecten = default(string), string omschrijvingTopografischeMutatie = default(string))
        {
            this.Identificatie = identificatie;
            this.Domein = domein;
            this.Aard = aard;
            this.BedragTransactiesomLevering = bedragTransactiesomLevering;
            this.OmschrijvingKadastraleObjecten = omschrijvingKadastraleObjecten;
            this.OmschrijvingTopografischeMutatie = omschrijvingTopografischeMutatie;
        }

        /// <summary>
        /// Gets or Sets Identificatie
        /// </summary>
        [DataMember(Name = "identificatie", EmitDefaultValue = false)]
        public string Identificatie { get; set; }

        /// <summary>
        /// Het domein waartoe de identificatie behoort. 
        /// </summary>
        /// <value>Het domein waartoe de identificatie behoort. </value>
        [DataMember(Name = "domein", EmitDefaultValue = false)]
        public string Domein { get; set; }

        /// <summary>
        /// Gets or Sets Aard
        /// </summary>
        [DataMember(Name = "aard", EmitDefaultValue = false)]
        public Waardelijst Aard { get; set; }

        /// <summary>
        /// Gets or Sets BedragTransactiesomLevering
        /// </summary>
        [DataMember(Name = "bedragTransactiesomLevering", EmitDefaultValue = false)]
        public Bedrag BedragTransactiesomLevering { get; set; }

        /// <summary>
        /// Gets or Sets OmschrijvingKadastraleObjecten
        /// </summary>
        [DataMember(Name = "omschrijvingKadastraleObjecten", EmitDefaultValue = false)]
        public string OmschrijvingKadastraleObjecten { get; set; }

        /// <summary>
        /// Gets or Sets OmschrijvingTopografischeMutatie
        /// </summary>
        [DataMember(Name = "omschrijvingTopografischeMutatie", EmitDefaultValue = false)]
        public string OmschrijvingTopografischeMutatie { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Stukdeel {\n");
            sb.Append("  Identificatie: ").Append(Identificatie).Append("\n");
            sb.Append("  Domein: ").Append(Domein).Append("\n");
            sb.Append("  Aard: ").Append(Aard).Append("\n");
            sb.Append("  BedragTransactiesomLevering: ").Append(BedragTransactiesomLevering).Append("\n");
            sb.Append("  OmschrijvingKadastraleObjecten: ").Append(OmschrijvingKadastraleObjecten).Append("\n");
            sb.Append("  OmschrijvingTopografischeMutatie: ").Append(OmschrijvingTopografischeMutatie).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Stukdeel);
        }

        /// <summary>
        /// Returns true if Stukdeel instances are equal
        /// </summary>
        /// <param name="input">Instance of Stukdeel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Stukdeel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Identificatie == input.Identificatie ||
                    (this.Identificatie != null &&
                    this.Identificatie.Equals(input.Identificatie))
                ) && 
                (
                    this.Domein == input.Domein ||
                    (this.Domein != null &&
                    this.Domein.Equals(input.Domein))
                ) && 
                (
                    this.Aard == input.Aard ||
                    (this.Aard != null &&
                    this.Aard.Equals(input.Aard))
                ) && 
                (
                    this.BedragTransactiesomLevering == input.BedragTransactiesomLevering ||
                    (this.BedragTransactiesomLevering != null &&
                    this.BedragTransactiesomLevering.Equals(input.BedragTransactiesomLevering))
                ) && 
                (
                    this.OmschrijvingKadastraleObjecten == input.OmschrijvingKadastraleObjecten ||
                    (this.OmschrijvingKadastraleObjecten != null &&
                    this.OmschrijvingKadastraleObjecten.Equals(input.OmschrijvingKadastraleObjecten))
                ) && 
                (
                    this.OmschrijvingTopografischeMutatie == input.OmschrijvingTopografischeMutatie ||
                    (this.OmschrijvingTopografischeMutatie != null &&
                    this.OmschrijvingTopografischeMutatie.Equals(input.OmschrijvingTopografischeMutatie))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Identificatie != null)
                    hashCode = hashCode * 59 + this.Identificatie.GetHashCode();
                if (this.Domein != null)
                    hashCode = hashCode * 59 + this.Domein.GetHashCode();
                if (this.Aard != null)
                    hashCode = hashCode * 59 + this.Aard.GetHashCode();
                if (this.BedragTransactiesomLevering != null)
                    hashCode = hashCode * 59 + this.BedragTransactiesomLevering.GetHashCode();
                if (this.OmschrijvingKadastraleObjecten != null)
                    hashCode = hashCode * 59 + this.OmschrijvingKadastraleObjecten.GetHashCode();
                if (this.OmschrijvingTopografischeMutatie != null)
                    hashCode = hashCode * 59 + this.OmschrijvingTopografischeMutatie.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
