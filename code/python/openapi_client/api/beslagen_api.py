"""
    Kadaster - BRK-Bevragen API

    D.m.v. deze toepassing worden meerdere, korte bevragingen op de Basis Registratie Kadaster beschikbaar gesteld. Deze toepassing betreft het verstrekken van Kadastrale Onroerende Zaak informatie.   # noqa: E501

    The version of the OpenAPI document: 1.3.0
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from openapi_client.api_client import ApiClient, Endpoint as _Endpoint
from openapi_client.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from openapi_client.model.bad_request_foutbericht import BadRequestFoutbericht
from openapi_client.model.beslag_hal import BeslagHal
from openapi_client.model.beslag_hal_collectie import BeslagHalCollectie
from openapi_client.model.foutbericht import Foutbericht


class BeslagenApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        def __get_beslag(
            self,
            kadastraal_onroerende_zaak_identificatie,
            beslag_identificatie,
            **kwargs
        ):
            """get_beslag  # noqa: E501

            Raadpleeg een beslag en beslaglegger(s) van een kadastraal onroerende zaak   # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.get_beslag(kadastraal_onroerende_zaak_identificatie, beslag_identificatie, async_req=True)
            >>> result = thread.get()

            Args:
                kadastraal_onroerende_zaak_identificatie (str): De unieke identificatie van een kadastraal onroerende zaak. 
                beslag_identificatie (str): De unieke identificatie van het beslag. 

            Keyword Args:
                fields (str): Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature). [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                BeslagHal
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['kadastraal_onroerende_zaak_identificatie'] = \
                kadastraal_onroerende_zaak_identificatie
            kwargs['beslag_identificatie'] = \
                beslag_identificatie
            return self.call_with_http_info(**kwargs)

        self.get_beslag = _Endpoint(
            settings={
                'response_type': (BeslagHal,),
                'auth': [
                    'apiKeyAuth'
                ],
                'endpoint_path': '/kadastraalonroerendezaken/{kadastraalOnroerendeZaakIdentificatie}/beslagen/{beslagIdentificatie}',
                'operation_id': 'get_beslag',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'kadastraal_onroerende_zaak_identificatie',
                    'beslag_identificatie',
                    'fields',
                ],
                'required': [
                    'kadastraal_onroerende_zaak_identificatie',
                    'beslag_identificatie',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'kadastraal_onroerende_zaak_identificatie':
                        (str,),
                    'beslag_identificatie':
                        (str,),
                    'fields':
                        (str,),
                },
                'attribute_map': {
                    'kadastraal_onroerende_zaak_identificatie': 'kadastraalOnroerendeZaakIdentificatie',
                    'beslag_identificatie': 'beslagIdentificatie',
                    'fields': 'fields',
                },
                'location_map': {
                    'kadastraal_onroerende_zaak_identificatie': 'path',
                    'beslag_identificatie': 'path',
                    'fields': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/hal+json',
                    'application/problem+json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__get_beslag
        )

        def __get_beslagen_kadastraal_onroerende_zaak(
            self,
            kadastraal_onroerende_zaak_identificatie,
            **kwargs
        ):
            """get_beslagen_kadastraal_onroerende_zaak  # noqa: E501

            Raadpleeg beslagen en beslagleggers van een kadastraal onroerende zaak   # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.get_beslagen_kadastraal_onroerende_zaak(kadastraal_onroerende_zaak_identificatie, async_req=True)
            >>> result = thread.get()

            Args:
                kadastraal_onroerende_zaak_identificatie (str): De unieke identificatie van een kadastraal onroerende zaak. 

            Keyword Args:
                fields (str): Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature). [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                BeslagHalCollectie
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['kadastraal_onroerende_zaak_identificatie'] = \
                kadastraal_onroerende_zaak_identificatie
            return self.call_with_http_info(**kwargs)

        self.get_beslagen_kadastraal_onroerende_zaak = _Endpoint(
            settings={
                'response_type': (BeslagHalCollectie,),
                'auth': [
                    'apiKeyAuth'
                ],
                'endpoint_path': '/kadastraalonroerendezaken/{kadastraalOnroerendeZaakIdentificatie}/beslagen',
                'operation_id': 'get_beslagen_kadastraal_onroerende_zaak',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'kadastraal_onroerende_zaak_identificatie',
                    'fields',
                ],
                'required': [
                    'kadastraal_onroerende_zaak_identificatie',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'kadastraal_onroerende_zaak_identificatie':
                        (str,),
                    'fields':
                        (str,),
                },
                'attribute_map': {
                    'kadastraal_onroerende_zaak_identificatie': 'kadastraalOnroerendeZaakIdentificatie',
                    'fields': 'fields',
                },
                'location_map': {
                    'kadastraal_onroerende_zaak_identificatie': 'path',
                    'fields': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/hal+json',
                    'application/problem+json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__get_beslagen_kadastraal_onroerende_zaak
        )
