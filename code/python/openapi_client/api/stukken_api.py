"""
    Kadaster - BRK-Bevragen API

    D.m.v. deze toepassing worden meerdere, korte bevragingen op de Basis Registratie Kadaster beschikbaar gesteld. Deze toepassing betreft het verstrekken van Kadastrale Onroerende Zaak informatie.   # noqa: E501

    The version of the OpenAPI document: 1.3.0
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from openapi_client.api_client import ApiClient, Endpoint as _Endpoint
from openapi_client.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from openapi_client.model.bad_request_foutbericht import BadRequestFoutbericht
from openapi_client.model.foutbericht import Foutbericht
from openapi_client.model.stuk_hal import StukHal
from openapi_client.model.stukdeel_hal import StukdeelHal


class StukkenApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        def __get_stuk(
            self,
            stuk_identificatie,
            **kwargs
        ):
            """get_stuk  # noqa: E501

            Raadplegen van een stuk. In een akte (stuk) zijn meerdere rechtsfeiten (stukdelen) vastgelegd.   # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.get_stuk(stuk_identificatie, async_req=True)
            >>> result = thread.get()

            Args:
                stuk_identificatie (str):

            Keyword Args:
                expand (str): Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).. [optional]
                fields (str): Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature). [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                StukHal
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['stuk_identificatie'] = \
                stuk_identificatie
            return self.call_with_http_info(**kwargs)

        self.get_stuk = _Endpoint(
            settings={
                'response_type': (StukHal,),
                'auth': [
                    'apiKeyAuth'
                ],
                'endpoint_path': '/stukken/{stukIdentificatie}',
                'operation_id': 'get_stuk',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'stuk_identificatie',
                    'expand',
                    'fields',
                ],
                'required': [
                    'stuk_identificatie',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'stuk_identificatie',
                ]
            },
            root_map={
                'validations': {
                    ('stuk_identificatie',): {
                        'max_length': 60,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'stuk_identificatie':
                        (str,),
                    'expand':
                        (str,),
                    'fields':
                        (str,),
                },
                'attribute_map': {
                    'stuk_identificatie': 'stukIdentificatie',
                    'expand': 'expand',
                    'fields': 'fields',
                },
                'location_map': {
                    'stuk_identificatie': 'path',
                    'expand': 'query',
                    'fields': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/hal+json',
                    'application/problem+json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__get_stuk
        )

        def __get_stukdeel(
            self,
            stukdeel_identificatie,
            **kwargs
        ):
            """get_stukdeel  # noqa: E501

            Raadplegen van een stukdeel. In een akte (stuk) zijn meerdere rechtsfeiten (stukdelen) vastgelegd. Met de stukdeel-identificaties kunnen gegevens over het stukdeel worden opgevraagd.   # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.get_stukdeel(stukdeel_identificatie, async_req=True)
            >>> result = thread.get()

            Args:
                stukdeel_identificatie (str):

            Keyword Args:
                fields (str): Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature). [optional]
                expand (str): Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                StukdeelHal
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['stukdeel_identificatie'] = \
                stukdeel_identificatie
            return self.call_with_http_info(**kwargs)

        self.get_stukdeel = _Endpoint(
            settings={
                'response_type': (StukdeelHal,),
                'auth': [
                    'apiKeyAuth'
                ],
                'endpoint_path': '/stukdelen/{stukdeelIdentificatie}',
                'operation_id': 'get_stukdeel',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'stukdeel_identificatie',
                    'fields',
                    'expand',
                ],
                'required': [
                    'stukdeel_identificatie',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'stukdeel_identificatie',
                ]
            },
            root_map={
                'validations': {
                    ('stukdeel_identificatie',): {
                        'max_length': 60,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'stukdeel_identificatie':
                        (str,),
                    'fields':
                        (str,),
                    'expand':
                        (str,),
                },
                'attribute_map': {
                    'stukdeel_identificatie': 'stukdeelIdentificatie',
                    'fields': 'fields',
                    'expand': 'expand',
                },
                'location_map': {
                    'stukdeel_identificatie': 'path',
                    'fields': 'query',
                    'expand': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/hal+json',
                    'application/problem+json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__get_stukdeel
        )
